# Generated by Django 3.0.3 on 2020-06-19 09:39

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        #('BMS', '0002_auto_20200619_0536'),
    ]

    operations = [
        # migrations.RemoveField(
        #     model_name='bms_admin',
        #     name='username',
        # ),
        # migrations.RemoveField(
        #      model_name='readers',
        #      name='username',
        #  ),
        # migrations.RemoveField(
        #     model_name='reservation',
        #     name='bookId',
        # ),
        # migrations.AddField(
        #     model_name='bms_admin',
        #     name='date_joined',
        #     field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        # ),
        # migrations.AddField(
        #     model_name='bms_admin',
        #     name='email',
        #     field=models.EmailField(blank=True, max_length=254, verbose_name='email address'),
        # ),
        # migrations.AddField(
        #     model_name='bms_admin',
        #     name='first_name',
        #     field=models.CharField(blank=True, max_length=30, verbose_name='first name'),
        # ),
        # migrations.AddField(
        #     model_name='bms_admin',
        #     name='groups',
        #     field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        # ),
        # migrations.AddField(
        #     model_name='bms_admin',
        #     name='is_active',
        #     field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        # ),
        # migrations.AddField(
        #     model_name='bms_admin',
        #     name='is_staff',
        #     field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        # ),
        # migrations.AddField(
        #     model_name='bms_admin',
        #     name='is_superuser',
        #     field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        # ),
        # migrations.AddField(
        #     model_name='bms_admin',
        #     name='last_login',
        #     field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        # ),
        # migrations.AddField(
        #     model_name='bms_admin',
        #     name='last_name',
        #     field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        # ),
        # migrations.AddField(
        #     model_name='bms_admin',
        #     name='user_permissions',
        #     field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        # ),
        # # migrations.AddField(
        # #     model_name='bms_admin',
        # #     name='username',
        # #     field=models.CharField(max_length=80, null=True, unique=True),
        # # ),
        # migrations.AddField(
        #     model_name='booklist',
        #     name='count',
        #     field=models.IntegerField(null=True),
        # ),
        # migrations.AddField(
        #     model_name='booklist',
        #     name='pub_date',
        #     field=models.DateField(null=True),
        # ),
        # migrations.AddField(
        #     model_name='booklist',
        #     name='publisher',
        #     field=models.CharField(max_length=80, null=True),
        # ),
        # migrations.AddField(
        #     model_name='readers',
        #     name='password',
        #     field=models.CharField(max_length=32, null=True),
        # ),
        # migrations.AddField(
        #     model_name='readers',
        #     name='username',
        #     field=models.CharField(max_length=80, null=True),
        # ),
        # migrations.AddField(
        #     model_name='reservation',
        #     name='ISBN',
        #     field=models.ForeignKey(default='null', on_delete=django.db.models.deletion.CASCADE, to='BMS.booklist'),
        # ),
        # migrations.AlterField(
        #     model_name='reservation',
        #     name='reserveLength',
        #     field=models.IntegerField(),
        # ),
        # migrations.AlterField(
        #     model_name='reservation',
        #     name='reserveTime',
        #     field=models.DateField(auto_now_add=True),
        # ),
        migrations.CreateModel(
            name='reservation',
            fields=[

                ('reserveLength', models.IntegerField()),
                ('reserveTime', models.DateField(auto_now_add=True)),
                ('ISBN', models.ForeignKey(default='null', on_delete=django.db.models.deletion.CASCADE, to='BMS.booklist')),
                ('readerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BMS.readers')),
            ],
        ),

    ]
